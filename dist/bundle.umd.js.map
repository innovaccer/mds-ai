{"version":3,"file":"bundle.umd.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../core/components/atoms/button/Button.tsx","../core/components/atoms/iconButton/IconButton.tsx","../core/components/atoms/avatar/AIAvatar.svg","../core/components/atoms/avatar/Avatar.tsx","../core/components/atoms/text/Text.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as React from \"react\";\nimport styles from \"../../../../css/src/components/Button.module.css\";\nimport classNames from \"classnames\";\nimport { ButtonAppearance, ButtonType } from \"../../../common.type\";\n\nexport interface ButtonProps {\n  /**\n   * Pass label to `Button`\n   */\n  label?: string;\n  /**\n   * Defines Appearance of the `Button`\n   */\n  appearance?: ButtonAppearance;\n  /**\n   * Type of `Button`\n   */\n  type?: ButtonType;\n  /**\n   * Disables the `Button`\n   */\n  disabled?: boolean;\n  /**\n   * Pass children to `Button`\n   */\n  children?: React.ReactNode;\n  /**\n   * Specifies tab index of `Button`\n   */\n  tabIndex?: number;\n  /**\n   * Handler to be called when `Button` is clicked\n   */\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  /**\n   * Handler to be called when mouse pointer enters `Button`.\n   */\n  onMouseEnter?: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  /**\n   * Handler to be called when mouse pointer leaves `Button`.\n   */\n  onMouseLeave?: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  /**\n   * Stores custom testing data private to the component.\n   */\n  \"data-test\"?: string;\n  /**\n   * Adds className to `Button`\n   */\n  className?: string;\n}\n\nexport const Button = (props: ButtonProps) => {\n  const { appearance, className, label, children, ...rest } = props;\n\n  const buttonClassNames = classNames(\n    {\n      [styles.Button]: true,\n      [styles[\"Button--primary\"]]: appearance === \"primary\",\n      [styles[\"Button--basic\"]]: appearance === \"basic\",\n    },\n    className\n  );\n\n  return (\n    <button\n    className={buttonClassNames}\n    data-test=\"DesignSystem-AI-Button\"\n    {...rest}\n    >\n      {label || children}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  appearance: 'basic' as ButtonAppearance\n}\n\nexport default Button;\n","import * as React from \"react\";\nimport styles from \"../../../../css/src/components/IconButton.module.css\";\nimport classNames from \"classnames\";\nimport { IconPosition, ButtonType, IconShape } from \"../../../common.type\";\n\nexport interface IconButtonProps {\n  /**\n   * Name of the Icon\n   */\n  icon?: string;\n  /**\n   * Defines position of AI Icon\n   */\n  position?: IconPosition;\n  /**\n   * Defines shape of `IconButton`\n   */\n  shape?: IconShape;\n  /**\n   * Set as `true` to show selected state of `IconButton`\n   */\n  selected?: boolean;\n  /**\n   * Type of `IconButton`\n   */\n  type?: ButtonType;\n  /**\n   * Disables the `IconButton`\n   */\n  disabled?: boolean;\n  /**\n   * Specifies tab index of `IconButton`\n   */\n  tabIndex?: number;\n  /**\n   * Handler to be called when `IconButton` is clicked\n   */\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  /**\n   * Handler to be called when mouse pointer enters `IconButton`.\n   */\n  onMouseEnter?: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  /**\n   * Handler to be called when mouse pointer leaves `Button`.\n   */\n  onMouseLeave?: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  /**\n   * Stores custom testing data private to the component.\n   */\n  \"data-test\"?: string;\n  /**\n   * Adds className to `Button`\n   */\n  className?: string;\n}\n\nexport const IconButton = (props: IconButtonProps) => {\n  const { icon, selected, position, shape, className, ...rest } = props;\n\n  const buttonClassNames = classNames(\n    {\n      [styles.IconButton]: true,\n      [styles[\"IconButton--round\"]]: shape === 'round',\n      [styles[\"IconButton--selected\"]]: selected\n    },\n    className\n  );\n\n  // replace with icon component\n  return (\n    <button\n      className={buttonClassNames}\n      data-test=\"DesignSystem-AI-IconButton\"\n      {...rest}\n    >\n      {icon}aa\n    </button>\n  );\n};\n\nexport default IconButton;\n","var img = \"data:image/svg+xml,%3csvg width='64' height='64' viewBox='0 0 64 64' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cg clip-path='url(%23clip0_3314_32121)'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M18.1898 55.9227C13.7816 57.1861 8.66759 55.5682 6.05421 51.0432L2.53533 44.9454C-0.0780511 40.4204 1.0788 35.1799 4.37855 31.9957C1.0788 28.8114 -0.0780511 23.5742 2.53533 19.046L6.05421 12.9482C8.66759 8.42323 13.7816 6.80532 18.1898 8.07193C19.2983 3.62107 23.2555 -0.00149536 28.479 -0.00149536H35.52C40.7468 -0.00149536 44.7039 3.62107 45.8124 8.07193C50.2174 6.80532 55.3314 8.42323 57.9448 12.9482L61.4669 19.046C64.0771 23.5742 62.9202 28.8114 59.6237 31.9957C62.9202 35.1799 64.0771 40.4204 61.4637 44.9454L57.9448 51.0432C55.3314 55.5682 50.2174 57.1861 45.8124 55.9227C44.7039 60.3703 40.7468 63.9929 35.52 63.9929H28.479C23.2555 63.9929 19.2983 60.3703 18.1898 55.9227Z' fill='url(%23paint0_linear_3314_32121)'/%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M12 32C23.0457 32 32 23.0457 32 12C32 23.0457 40.9543 32 52 32C40.9543 32 32 40.9543 32 52C32 40.9543 23.0457 32 12 32Z' fill='white'/%3e%3c/g%3e%3cdefs%3e%3clinearGradient id='paint0_linear_3314_32121' x1='18.99' y1='0.239091' x2='41.9606' y2='54.7321' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFC208'/%3e%3cstop offset='1' stop-color='%23E31C79'/%3e%3c/linearGradient%3e%3cclipPath id='clip0_3314_32121'%3e%3crect width='64' height='64' fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e\";\n  export default img;","import * as React from \"react\";\nimport AILogo from './AIAvatar.svg';\nimport { Size3Hierarchy } from \"@/common.type\";\n\nexport interface AvatarProps {\n  /**\n   * Provide width to the `Avatar`\n   */\n  width?: number;\n  /**\n   * Provide height to the `Avatar`\n   */\n  height?: number;\n  /**\n   * Specify alt text to the `Avatar`\n   */\n  alt: string;\n  /**\n   * Defines size of `Avatar`\n   */\n  size?: Size3Hierarchy;\n  /**\n   * Adds custom class\n   */\n  className?: string;\n  /**\n   * Stores custom testing data private to the component\n   */\n  'data-test'?: string;\n}\n\nexport const Avatar = (props: AvatarProps) => {\n  const {width, height, alt, size, ...rest} = props;\n\n  const sizeMapping = {\n    'regular': 32,\n    'medium': 48,\n    'large': 64\n  }\n\n  const avatarWidth = (size && sizeMapping[size]) || width;\n  const avatarHeight = (size && sizeMapping[size]) || height;\n\n  return (\n    <img src={AILogo} alt={alt} width={avatarWidth} height={avatarHeight} data-test=\"DesignSystem-AI-Avatar\" {...rest} />\n  )\n}\n\nAvatar.defaultProps = {\n  width: 32,\n  height: 32,\n}\n\nexport default Avatar;\n","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"../../../../css/src/components/Text.module.css\";\n\nexport interface TextProps {\n  /**\n   * Text to be rendered\n   */\n  children: string;\n  /**\n   * Stores custom testing data private to the component.\n   */\n  \"data-test\"?: string;\n  /**\n   * Adds className to `Button`\n   */\n  className?: string;\n}\n\nexport const Text = (props: TextProps) => {\n  const { children, className, ...rest } = props;\n\n  const TextClassNames = classNames(\n    {\n      [styles.Text]: true\n    },\n    className\n  )\n\n  return (\n    <span data-test=\"DesignSystem-AI-Text\" className={TextClassNames} {...rest}>{children}</span>\n  )\n}\n\nexport default Text;\n"],"names":["styles","React","AILogo"],"mappings":"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","x_google_ignoreList":[0]}